{
  "user_r": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "^[^#]*(USER)\\s+([a-zA-Z0-9_\\-]+)\\s*$"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "(USER)"
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "(root)"
      }
    ],
    "cond": [
      true,
      false
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "An instruction has been identified setting the USER to 'root'.",
    "level": "High"
  },
  "user": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "^\\s*[^#]\\s*(USER)\\s+([a-zA-Z0-9_\\-]+)\\s*$"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 1,
        "s": ""
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": ""
      }
    ],
    "cond": [
      false,
      false
    ],
    "exists": "bne",
    "ctx": "file",
    "comnt": false,
    "desc": "No instruction has been identified to set the USER; this implies 'root'.",
    "level": "High"
  },
  "workdir": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "^\\s*[^#]\\s*(WORKDIR)\\s+(.+)$"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 1,
        "s": ""
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": ""
      }
    ],
    "cond": [
      false,
      false
    ],
    "exists": "bne",
    "ctx": "file",
    "comnt": false,
    "desc": "No instruction has been identified to set the WORKDIR; This can result in unexpected behaviour.",
    "level": "Low"
  },
  "http": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "^\\s*[^#]*\\s*(http://)([^/]+)"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "(http://)"
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "([^/]+)"
      }
    ],
    "cond": [
      true,
      false
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "An external resource is included/downloaded via plain HTTP.",
    "level": "High"
  },
  "expose": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "^\\s*[^#]*\\s*(EXPOSE)(\\s*[0-9\\studcp/]+)+$"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "(EXPOSE)"
      },
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "\\s*(\\b(?:[0-9]|[1-8][0-9]|9[0-9]|[1-8][0-9]{2}|9[0-8][0-9]|99[0-9]|10[01][0-9]|102[0-3])(?:/[udtcp]+)\\b)"
      }
    ],
    "cond": [
      true,
      false
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "A privileged port (<1024) is being EXPOSEd by this container.",
    "level": "High"
  },
  "gem": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "(?:(?:[^-](gem)+\\s+)(?:(?:-+[A-Za-z-]+|\\s+)*(?:install)+(?:-+[A-Za-z-]+|\\s+)*)+(?:(?:\\b|'|/)([^-\\s]{1}[a-zA-Z0-9\\-_=<>!\\'\\\"\\\\./ :${}*]+)+)+(?:\\b|'|/))+"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "(gem)"
      },
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "(([:]+|-v|--version))+"
      }
    ],
    "cond": [
      true,
      true
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "GEM pkgs are being installed without version pinning.",
    "level": "High"
  },
  "pip": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "(?:(?:[^-](pip[0-9]*)+\\s+)(?:(?:-+[A-Za-z-]+|\\s+)*(?:install)+(?:-+[A-Za-z-]+|\\s+)*)+(?:(?:\\b|'|/)([^-\\s]{1}[a-zA-Z0-9\\-_=<>!\\'\\\"\\\\./ :${}*]+)+)+(?:\\b|'|/))+"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "(pip[0-9]*)"
      },
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "([=<>!]+)+"
      }
    ],
    "cond": [
      true,
      true
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "PIP pkgs are being installed without version pinning.",
    "level": "High"
  },
  "maintain": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "^\\s*[^#]*\\s*(MAINTAINER)\\s+([\\w@.+<>\\-\"'\\s\\(\\)]+)\\s*$"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 1,
        "s": ""
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": ""
      }
    ],
    "cond": [
      false,
      false
    ],
    "exists": "bie",
    "ctx": "file",
    "comnt": false,
    "desc": "A MAINTAINER instruction is specified. Based on Docker recommendations this should be replaced with a LABEL.",
    "level": "Low"
  },
  "maintn_lbl": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "^\\s*[^#]*\\s*(LABEL)\\s+(?:\\s*[^= ]+=[^=]+\\s*)*(maintainer\\s*=\\s*[\\w@.+<>\\-\"'\\s\\(\\)]+)(?:\\s*[^= ]+=[^=]+\\s*)*$"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 1,
        "s": ""
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": ""
      }
    ],
    "cond": [
      false,
      false
    ],
    "exists": "bne",
    "ctx": "file",
    "comnt": false,
    "desc": "There is no LABEL with a maintainer key specified. Please make sure to add a label like: LABEL maintainer=\"maintainer@CORP.com\".",
    "level": "Low"
  },
  "add": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "^[^#]*(ADD)\\s+(.*)$"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "(ADD)"
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "(.*)"
      }
    ],
    "cond": [
      true,
      false
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "ADD is being used in this Dockerfile. Add can lead to unwanted behaviour. Please use COPY instead.",
    "level": "Medium"
  },
  "shell": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "(SHELL)\\s+([^\\]]+\\])"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "(SHELL)"
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "(.*)"
      }
    ],
    "cond": [
      true,
      false
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "SHELL is being used in this Dockerfile. Be aware that this impact the behaviour of RUN, CMD and ENTRYPOINT and might lead to unexpected behaviour.",
    "level": "Info"
  },
  "arg": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "(ARG)\\s+((?:[^=]+)=?(?:.*))"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "(ARG)"
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "(secret|key|pass|phrase|creds|credentials|pwd)+"
      }
    ],
    "cond": [
      true,
      false
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "An ARG is being set with a name that indicates that potential sensitive information is being used in this ARG. Please use encrypted ENV VARs for secret management.",
    "level": "Info"
  },
  "env": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "(ENV)\\s+((?:[^\\s]+)\\s?(?:.*))"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "(ENV)"
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "(secret|key|pass|phrase|creds|credentials|pwd)+"
      }
    ],
    "cond": [
      true,
      false
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "An ENV is being set with a name that indicates that potential sensitive information is being used in this ENV. Please make sure to use encrypted ENV VARs for secret management.",
    "level": "Info"
  },
  "cmd_entry": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "(CMD|ENTRYPOINT)\\s+(.*)"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "(CMD|ENTRYPOINT)"
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "\\A\\["
      }
    ],
    "cond": [
      true,
      true
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "A CMD/ENTRYPOINT is defined in 'shell' format. It is highly recommended to only use JSON format for these instructions.",
    "level": "Info"
  },
  "curl_wget": {
    "regex": {
      "json_class": "Regexp",
      "o": 1,
      "s": "(?:(?:(wget|curl)\\s+(?:-{1,2}[^\\s]+)*(https?://[^\\s]+)))+"
    },
    "check": [
      {
        "json_class": "Regexp",
        "o": 0,
        "s": "(wget|curl)"
      },
      {
        "json_class": "Regexp",
        "o": 1,
        "s": "(.*)"
      }
    ],
    "cond": [
      true,
      false
    ],
    "exists": "nop",
    "ctx": "line",
    "comnt": false,
    "desc": "CURL/WGET is being used. This can introduce potentially dangerous and unexpected behaviour. Please pull those dependencies before the docker build and use COPY to add them to the container.",
    "level": "Medium"
  }
}
